https://www.loom.com/share/349c752be4f94de4b5cf10d2e63ff2dd

_______________________________________________________________________
Animal.cpp

#include "Animal.h"
#include <iostream>
using namespace std;

Animal::Animal()
{
}

Animal::Animal(string n, int w, string t)
{
	name = n;
	weight = w;
	type = t;
}

void Animal::eat()
{
	weight += 5;
}

int Animal::getWeight()
{
	return weight;
}

string Animal::getName()
{
	return name;
}

string Animal::getType()
{
	return type;
}
_______________________________________________________________________
Animal.h

#pragma once
using namespace std;
#include <string>

class Animal
{
private:
	string name;
	int weight;
	string type;
public:
	Animal();
	Animal(string n, int w, string t);
	void eat();
	int getWeight();
	string getName();
	string getType();

};
_______________________________________________________________________
AnimalFarm1.cpp

# include "Barn.h"
#include <iostream>
using namespace std;

int main()
{
    Barn myBarn = Barn();
    myBarn.feedingTime();
}
_______________________________________________________________________
Barn.cpp

#include "Barn.h"
#include <iostream>
#include <thread>
#include <chrono>
using namespace std;

Barn::Barn()
{
	Horse Lightning = Horse("Lightning", 100, "Horse");
	Horse Greg = Horse("Greg", 200, "Horse");
	Horse Martha = Horse("Martha", 300, "Horse");
	Stalls.push_back(Lightning);
	Stalls.push_back(Greg);
	Stalls.push_back(Martha);

	Chicken Wing = Chicken("Wing", 100, "Chicken");
	Chicken Tender = Chicken("Tender", 200, "Chicken");
	Chicken Sandwich = Chicken("Sandwich", 300, "Chicken");
	Coup.push_back(Wing);
	Coup.push_back(Tender);
	Coup.push_back(Sandwich);

	Cow Beef = Cow("Beef", 100, "Cow");
	Cow Baccon = Cow("Baccon", 200, "Cow");
	Cow Joe = Cow("Joe", 300, "Cow");
	Pen.push_back(Beef);
	Pen.push_back(Baccon);
	Pen.push_back(Joe);
}

void Barn::feedingTime()
{
	cout << "There are 9 Animals. The Horses eat at 1:00. The Chickens eats at 3:00. The Cows eats at 5:00" <<endl << endl;

	cout << "It is 1:00 the Horses are eating" << endl << "#####################################################" << endl;
	for (int i = 0; i < size(Stalls); i++)
	{
		cout << Stalls[i].getName() << " the " << Stalls[i].getType() << " weighs " << Stalls[i].getWeight() << " lbs." << endl;
		Stalls[i].eat();
		cout << Stalls[i].getName() << " is eating and now weighs " << Stalls[i].getWeight() << " lbs." << endl;

	}

	cout << "#####################################################" << endl << endl;
	cout << "It is 3:00 the Chickens are eating" << endl << "#####################################################" << endl;


	for (int i = 0; i < size(Coup); i++)
	{
		cout << Coup[i].getName() << " the " << Coup[i].getType() << " weighs " << Coup[i].getWeight() << " lbs." << endl;
		Coup[i].eat();
		cout << Coup[i].getName() << " is eating and now weighs " << Coup[i].getWeight() << " lbs." << endl;

	}

	cout << "#####################################################" << endl << endl;
	cout << "It is 5:00 the Cows are eating" << endl << "#####################################################" << endl;
	
/*	string top1 = "             __n__n__";
	string top2 = "      .------`-\\00 / -'";
	string top3 = "     / ##   ## (oo)";
	string top4 = "    / \\## __   ./";
	string top5 = "       |//YY \\|/";
	string top6 = "       |||   |||";
	for (int i = 0; i < 100; i++)
	{
		top1 = " " + top1;
		top2 = " " + top2;
		top3 = " " + top3;
		top4 = " " + top4;
		top5 = " " + top5;
		top6 = " " + top6;
		cout << top1 << endl;
		cout << top2 << endl;
		cout << top3 << endl;
		cout << top4 << endl;
		cout << top5 << endl;
		cout << top6 << endl;
		this_thread::sleep_for(chrono::microseconds(100));
		cout << "\033[2J\033[1;1H";
	}
*/



	for (int i = 0; i < size(Pen); i++)
	{
		cout << Pen[i].getName() << " the " << Pen[i].getType() << " weighs " << Pen[i].getWeight() << " lbs." << endl;
		Pen[i].eat();
		cout << Pen[i].getName() << " is eating and now weighs " << Pen[i].getWeight() << " lbs." << endl;

	}
	cout << "#####################################################" << endl << endl;

}

_______________________________________________________________________
Barn.h

#pragma once
#include "Horse.h"
#include "Cow.h"
#include "Chicken.h"
#include <vector>
using namespace std;

class Barn
{
private:
	vector <Horse> Stalls;
	vector <Chicken> Coup;
	vector <Cow> Pen;

public:
	Barn();
	void feedingTime();
};
_______________________________________________________________________
Chicken.cpp

#include "Chicken.h"

Chicken::Chicken(string n, int w, string t)
	:Animal(n, w, t)
{
}
_______________________________________________________________________
Chicken.h

#pragma once
#include "Animal.h"
class Chicken: public Animal
{
public:
	Chicken(string n, int w, string t);
};
_______________________________________________________________________
Cow.cpp

#include "Cow.h"

Cow::Cow(string n, int w, string t)
	:Animal(n, w, t)
{
}
_______________________________________________________________________
Cow.h

#pragma once
#include "Animal.h"
class Cow: public Animal
{
public:
	Cow(string n, int w, string t);
};
_______________________________________________________________________
Horse.cpp

#include "Horse.h"

Horse::Horse(string n, int w, string t)
	:Animal(n,w,t)

{
}
_______________________________________________________________________
Horse.h

#pragma once
#include "Animal.h"
class Horse: public Animal
{
public:
	Horse(string n, int w, string t);
};

_______________________________________________________________________

